import random
import dataset


def randomly_generate_initial_population():
    initial_population = []
    a = "123456789"
    for i in range(0, 20):
        b = list(a)
        random.shuffle(b)
        initial_population.append("0" + "".join(b) + "0")
    return initial_population


"""
我设置的p有两个标p[n][m]
n和m是节点，其中0和9是出发点，1~8是需求物资点
这样的话我们就可以用 p[n][m] 来表示从 n 走到 m 的距离
"""


def get_map():
    p = []
    k = 0
    while k <= len(dataset.d):
        for n in range(0, 10):
            p.append([])
            for m in range(0, 10):
                p[n].append(dataset.d[k])
                k += 1
        return p


"""
得到：
    p[0][m] p[1][m] p[2][m] p[3][m] p[4][m] p[5][m] p[6][m] p[7][m] p[8][m] p[9][m]
——————————————————————————————————————————————————————————————————————————————————————                           
p=[ [0,     4.0,    6.0,    7.5,    9.0,    20.0,   10.0,   16.0,   8.0,    0],     |  p[n][0]
    [4.0,   0,      6.5,    4.0,    10.0,   5.0,    7.5,    11.0,   10.0,   4.0],   |  p[n][1]
    [6.0,   6.5,    0,      7.5,    10.0,   10.0,   7.5,    7.5,    7.5,    6.0],   |  p[n][2]
    [7.5,   4.0,    7.5,    0,      10.0,   5.0,    9.0,    9.0,    15.0,   7.5],   |  p[n][3]
    [9.0,   10.0,   10.0,   10.0,   0,      10.0,   7.5,    7.5,    10.0,   9.0],   |  p[n][4]
    [20.0,  5.0,    10.0,   5.0,    10.0,   0,      7.0,    9.0,    7.5,    20.0],  |  p[n][5]
    [10.0,  7.5,    7.5,    9.0,    7.5,    7.0,    0,      7.0,    10.0,   10.0],  |  p[n][6]
    [16.0,  11.0,   7.5,    9.0,    7.5,    9.0,    7.0,    0,      10.0,   16.0],  |  p[n][7]
    [8.0,   10.0,   7.5,    15.0,   10.0,   7.5,    10.0,   10.0,   0,      8.0],   |  p[n][8]
    [0,     4.0,    6.0,    7.5,    9.0,    20.0,   10.0,   16.0,   8.0,    0]    ] |  p[n][9]

"""

"""
第一步：编码

按照论文，我们可以给每个路径来编号
如编号：06498253170，表示路径一：0->6->4->9(0),路径2：9(0)->8->2->5->3->1->7->0
可以看到，路径编号的开头和结尾都是0
所以我们只需要对中间的部分进行交叉互换和变异操作
"""
